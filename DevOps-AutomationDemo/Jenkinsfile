
pipeline {
    
    agent any
     environment {
        DOCKERHUB_CREDENTIALS = credentials('Rayleigh-hub')
       
    }
    tools{
        maven "Maven"
        jdk "JDK"
    }
     stages{
        stage('Initialize'){
            steps{
                sh '''  echo 'PATH = ${M2_HOME}/bin:${PATH}'
                        echo 'M2_HOME =/opt/apache-maven-3.9.0'
                   '''             
            }
        }     
         stage('clone code'){
             steps {
                  checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Mohan245/Demo-Project']])
                  echo 'code checkout'
             }
         }
        stage('Build Maven'){
            steps{                
                dir('DevOps-AutomationDemo'){
                sh 'mvn -B -DskipTests clean package'
                                 
                }
               }         
            }
         stage('Deploy'){
             steps{
                 dir('DevOps-AutomationDemo'){
                  
                    sh "mvn clean install -s settings.xml"


                  
                 }
             }
         }                                           
                 
             
         stage ('Server config'){
             steps{                          
                      configFileProvider([configFile(fileId:'07ccf874-d23e-4cf1-876c-e9d9f1a040c8',variable: 'url' )]) {                          
                      echo " =========== ^^^^^^^^^^^^ Reading config from pipeline script "
                      sh "cat ${env.url}"
                      echo " =========== ~~~~~~~~~~~~ ============ "
                     }  
                                     
                                                       
             }
         }
         stage('upload war/jar file to artifactory'){
             steps{
                 rtUpload(
                     serverId: 'Artifactory-server',
                     spec:'''{
                        "files":[
                             {
                                "pattern":"*.jar",
                                "target":"http://15.207.51.90:8082/artifactory/Kaizen/"
                             }
                            ]
                           }''',
                     )
             }
         }        
         stage('publish build info'){
               steps{
                   rtPublishBuildInfo(
                       serverId:'Artifactory-server',
                       )
               }
          }
         stage('Build Docker image'){
             steps{
                  dir('DevOps-AutomationDemo'){
                 sh 'docker build -t jenkinsdev-demo .'
                  }
             }
         }
         stage(' Dockerhub login') {
             steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
             }
         }
         stage(' pushing image to dockerhub') {
             steps{
                 sh 'docker tag  jenkinsdev-demo rayleigh0/jenkinsdev-demo '
                 sh 'docker  push rayleigh0/jenkinsdev-demo '
             }
         }    
     
 }
    
post {
        always {
            sh 'docker logout'
        }
   }

}


         
   
        
    

